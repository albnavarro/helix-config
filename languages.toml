use-grammars = { only = ["pug"] }

[[language]]
name = "typescript"
language-servers = [  "typescript-language-server", "eslint"]
formatter = { command = 'prettier', args = [ "--parser", "typescript"] }
auto-format = true
indent = { tab-width = 4, unit = "  " }

[[language]]
name = "tsx"
language-servers = [ "typescript-language-server", "eslint", "emmet-language-server"]
formatter = { command = 'prettier', args = ["--parser", "typescript"] }
auto-format = true
indent = { tab-width = 4, unit = "  " }

[[language]]
name = "jsx"
language-servers = [ "typescript-language-server", "eslint"]
grammar = "javascript"
formatter = { command = 'prettier', args = ["--parser", "typescript"] }
auto-format = true
indent = { tab-width = 4, unit = "  " }

[[language]]
name = "javascript"
language-servers = [ "typescript-language-server", "eslint"]
formatter = { command = 'prettier', args = ["--parser", "typescript"] }
indent = { tab-width = 4, unit = "  " }
auto-format = true

[[language]]
name = "json"
language-servers = [ "vscode-json-language-server" ]
formatter = { command = 'prettier', args = ["--parser", "json"] }
auto-format = true
indent = { tab-width = 4, unit = "  " }

[[language]]
name = "html"
formatter = { command = 'prettier', args = ["--parser", "html"] }
language-servers = [ "vscode-html-language-server","emmet-language-server"]
indent = { tab-width = 4, unit = "  " }

[[language]]
name = "css"
formatter = { command = 'prettier', args = ["--parser", "css"] }
language-servers = [ "vscode-css-language-server", "stylelint-lsp"]
indent = { tab-width = 4, unit = "  " }
auto-format = true

[[language]]
name = "scss"
formatter = { command = 'prettier', args = ["--parser", "css"] }
language-servers = [ "vscode-css-language-server"]
indent = { tab-width = 4, unit = "  " }
auto-format = true

[[language]]
name = "svelte"
formatter = { command = 'prettier', args = ["--parser", "svelte"] }
language-servers = [ "svelteserver"]
indent = { tab-width = 4, unit = "  " }
auto-format = true

[language-server.vscode-json-language-server.config]
json = { validate = { enable = true }, format = { enable = true } }
provideFormatter = true

[language-server.vscode-css-language-server.config]
css = { validate = { enable = true } }
scss = { validate = { enable = true } }
less = { validate = { enable = true } }
provideFormatter = true

[language-server.svelteserver]
command = "svelteserver"
args = ["--stdio"]

[language-server.eslint]
args = ["--stdio"]
command = "vscode-eslint-language-server"

[language-server.eslint.config]
format = true
nodePath = ""
onIgnoredFiles = "off"
quiet = false
rulesCustomizations = []
run = "onType"
useESLintClass = false
validate = "on"
codeAction = { disableRuleComment = { enable = true, location = "separateLine" }, showDocumentation = { enable = true } }
codeActionOnSave = { mode = "all" }
experimental = { }
problems = { shortenToSingleLine = false }
workingDirectory = { mode = "auto" }


# [language-server.typescript-language-server.config]

[language-server.emmet-language-server]
command="emmet-language-server"
args = ["--stdio"]

[language-server.typescript-language-server.config.completions]
completeFunctionCalls = true

[[language]]
name = "pug"
scope = "source.pug"
file-types = ["pug"]
injection-regex = "pug"
roots=["src/parser.c", "src/scanner.cc"]
comment-token = "//-"
formatter = { command = 'npx', args = ["prettier", "--parser", "pug"] }
auto-format = true
indent = { tab-width = 4, unit = "  " }

[[grammar]]
name = "pug"
source = { git = "https://github.com/zealot128/tree-sitter-pug", rev = "884e225b5ecca5d885ae627275f16ef648acd42e"}
